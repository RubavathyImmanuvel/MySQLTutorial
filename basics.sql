-- creation and deletion of DB
create database tutorial;
drop database tutorial;


create database tutorial;
show databases; -- to display all DBs


use tutorial;
CREATE TABLE USERS(
	ID INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(50) NOT NULL,
    AGE INT NOT NULL,
    PRIMARY KEY(ID)
);
SHOW TABLES;

-- to see the structure of the table
DESCRIBE USERS;


-- to modify the table
ALTER TABLE USERS ADD GENDER VARCHAR(10) NOT NULL AFTER AGE; -- for a single column
DESCRIBE USERS;

ALTER TABLE USERS -- for a multiple column
	ADD CITY VARCHAR(10) NOT NULL,
    ADD CONTACT VARCHAR(50) NOT NULL; 
DESCRIBE USERS;

ALTER TABLE USERS MODIFY CONTACT VARCHAR(25) NOT NULL;
DESCRIBE USERS;

ALTER TABLE USERS RENAME TO STUDENTS;


-- to get table contents
SELECT * FROM STUDENTS;


-- to insert a record into a table
INSERT INTO STUDENTS VALUES(NULL, 'RAM', 25, 'MALE', 'TVL', '12345678890');
INSERT INTO STUDENTS (NAME, AGE, GENDER, CITY, CONTACT) VALUES ('SAM', 23, 'MALE', 'CBE', '9876543210');
INSERT INTO STUDENTS (NAME, AGE, GENDER, CITY, CONTACT) VALUES ('RAVI', 23, 'MALE', 'CBE', '9876543210'), ('SARAH', 23, 'FEMALE', 'CBE', '9876543210');
SELECT * FROM STUDENTS;


-- to delete a record from a table
DELETE FROM STUDENTS WHERE ID=4;
SELECT * FROM STUDENTS;


-- to update a record from a table
UPDATE STUDENTS SET CITY='KALAKKAD', CONTACT='4567890321' WHERE ID=3;
SELECT * FROM STUDENTS;


-- to clear all records completely
TRUNCATE TABLE STUDENTS;


-- to select specific data from a table
INSERT INTO STUDENTS VALUES(NULL, 'RAM', 25, 'MALE', 'TVL', '12345678890');
INSERT INTO STUDENTS (NAME, AGE, GENDER, CITY, CONTACT) VALUES ('SAM', 23, 'MALE', 'CBE', '9876543210');
INSERT INTO STUDENTS (NAME, AGE, GENDER, CITY, CONTACT) VALUES ('RAVI', 23, 'MALE', 'CBE', '9876543210'), ('SARAH', 23, 'FEMALE', 'CBE', '9876543210');
SELECT * FROM STUDENTS;
SELECT NAME, AGE FROM STUDENTS;
SELECT NAME,AGE,CITY FROM STUDENTS WHERE CITY='CBE';
SELECT NAME,AGE,CITY FROM STUDENTS WHERE CITY='CBE' AND AGE>=23;
SELECT NAME,AGE,CITY FROM STUDENTS WHERE CITY='CBE' OR CITY='TVL';
SELECT NAME,AGE,CITY FROM STUDENTS WHERE (CITY='CBE' OR CITY='TVL') AND AGE>=23;
SELECT NAME,AGE,CITY FROM STUDENTS WHERE (CITY='CBE' OR CITY='TVL') AND AGE>=23 ORDER BY CITY;
SELECT CITY FROM STUDENTS;
SELECT DISTINCT CITY FROM STUDENTS;
SELECT COUNT(DISTINCT CITY) FROM STUDENTS;
SELECT COUNT(DISTINCT CITY) as total FROM STUDENTS;
SELECT * FROM STUDENTS;
SELECT * FROM STUDENTS LIMIT 0, 10; -- from 0 to 10
SELECT * FROM STUDENTS ORDER BY ID DESC LIMIT 0,1; -- to get last record
SELECT MAX(AGE) FROM STUDENTS;
SELECT MIN(AGE) FROM STUDENTS;
SELECT AVG(AGE) FROM STUDENTS;
SELECT ROUND(MIN(AGE),0) FROM STUDENTS;
SELECT SUM(AGE) FROM STUDENTS;
SELECT GENDER, COUNT(ID) FROM STUDENTS GROUP BY GENDER; -- to get male, female count
SELECT GENDER, COUNT(ID) AS TOTAL FROM STUDENTS GROUP BY GENDER; 
SELECT CITY, COUNT(ID) AS TOTAL FROM STUDENTS GROUP BY CITY;
SELECT NAME FROM STUDENTS WHERE NAME LIKE 'RA%'; -- to get name starts with 'ra'(wildcard search)
SELECT NAME FROM STUDENTS WHERE NAME LIKE '%AM';
SELECT NAME FROM STUDENTS WHERE NAME LIKE '%A%';
SELECT * FROM STUDENTS WHERE CITY='TVL' OR CITY='KALAKKAD';
SELECT * FROM STUDENTS WHERE CITY IN('TVL','KALAKKAD');
SELECT * FROM STUDENTS WHERE CITY NOT IN('TVL','KALAKKAD');
SELECT NAME FROM STUDENTS WHERE NAME NOT LIKE 'RA%';
SELECT NAME FROM STUDENTS WHERE AGE BETWEEN 23 AND 30;
SELECT NAME FROM STUDENTS WHERE AGE NOT BETWEEN 23 AND 30;


CREATE TABLE ATTENDANCE (
	AID INT NOT NULL AUTO_INCREMENT,
    ID INT NOT NULL,
    ADATE DATE NOT NULL,
    ASTATUS VARCHAR(10) NOT NULL,
    PRIMARY KEY (AID)
);
SHOW TABLES;
TRUNCATE TABLE ATTENDANCE;
INSERT INTO ATTENDANCE(ID,ADATE,ASTATUS) VALUES
	(1,'2025-02-14','P'),
    (1,'2025-02-15','P'),
    (1,'2025-02-16','P'),
    (2,'2025-02-14','P'),
    (3,'2025-02-14','P'),
    (4,'2025-02-14','P');
SELECT * FROM STUDENTS;
SELECT * FROM ATTENDANCE;
SELECT * FROM ATTENDANCE WHERE ID=1;
SELECT ID, COUNT(ADATE) AS WORKING FROM ATTENDANCE; -- error
SELECT ID, COUNT(ADATE) AS WORKING FROM ATTENDANCE GROUP BY ID;
SELECT ID, COUNT(ADATE) AS WORKING,
		COUNT(IF(ASTATUS='P', 1, NULL)) AS PRESENT FROM ATTENDANCE
        GROUP BY ID; -- to show how many days student is present out of how many working days


-- join example
CREATE TABLE EMP (
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(45) NOT NULL,
    DESIGN VARCHAR(45) NOT NULL,
    DOJ DATE NOT NULL,
    PRIMARY KEY(ID)
);
SHOW TABLES;
INSERT INTO EMP (NAME, DESIGN, DOJ) VALUES
('RAM', 'MANAGER', '2025-02-14'),
('SAM', 'HR', '2025-02-15'),
('TOM', 'AMC', '2025-02-16'),
('RAVI', 'SALES', '2025-02-17'),
('KUMAR', 'SALES', '2025-03-18');
SELECT * FROM EMP;


CREATE TABLE SALARY(
	SID INT NOT NULL AUTO_INCREMENT,
    ID INT NOT NULL,
    SDATE DATE NOT NULL,
    AMT INT NOT NULL,
    PRIMARY KEY (SID)
);
SHOW TABLES;
INSERT INTO SALARY(ID,SDATE,AMT) VALUES
(1, '2025-02-14', 10000),
(2, '2025-02-14', 7500),
(3, '2025-02-14', 6000),
(4, '2025-02-14', 4000);
SELECT * FROM SALARY;
SELECT * FROM EMP;
SELECT EMP.NAME,EMP.DESIGN,SALARY.SDATE,SALARY.AMT FROM 
	EMP INNER JOIN SALARY
    ON EMP.ID=SALARY.ID;
    
SELECT EMP.NAME,EMP.DESIGN,SALARY.SDATE,SALARY.AMT FROM 
	EMP LEFT JOIN SALARY
    ON EMP.ID=SALARY.ID;
    
SELECT EMP.NAME,EMP.DESIGN,SALARY.SDATE,SALARY.AMT FROM 
	EMP RIGHT JOIN SALARY
    ON EMP.ID=SALARY.ID;
    
SELECT * FROM STUDENTS;
SELECT * FROM ATTENDANCE;
SELECT STUDENTS.NAME,ATTENDANCE.ADATE,ATTENDANCE.ASTATUS FROM
	STUDENTS INNER JOIN ATTENDANCE
    ON STUDENTS.ID=ATTENDANCE.ID;
    
SELECT STUDENTS.NAME,ATTENDANCE.ADATE,ATTENDANCE.ASTATUS FROM
	STUDENTS LEFT JOIN ATTENDANCE
    ON STUDENTS.ID=ATTENDANCE.ID;
    
SELECT STUDENTS.NAME,ATTENDANCE.ADATE,ATTENDANCE.ASTATUS FROM
	STUDENTS RIGHT JOIN ATTENDANCE
    ON STUDENTS.ID=ATTENDANCE.ID;
    
    
-- case when (to add new column)
SELECT NAME,CITY,
(
	CASE
		WHEN CITY='TVL' THEN 100
        WHEN CITY='CBE' THEN 10
	END
)AS AMT FROM STUDENTS;

UPDATE STUDENTS SET CITY='CHN' WHERE CITY='TVL';
